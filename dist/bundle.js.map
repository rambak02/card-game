{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK,gBAAgB,KAAK;AACvE,aAAa;AACb;AACA;AACA;;;;;;;UClBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN+B;AACS;AACxoBAAoB,uBAAuB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,qDAAW;AACf;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA","sources":["webpack://cart-games/./src/styles/style.css?2394","webpack://cart-games/./src/game.js","webpack://cart-games/webpack/bootstrap","webpack://cart-games/webpack/runtime/define property getters","webpack://cart-games/webpack/runtime/hasOwnProperty shorthand","webpack://cart-games/webpack/runtime/make namespace object","webpack://cart-games/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","const shuffle = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n};\r\nexport const renderBoard = (cardClasses) => {\r\n    const shuffledCard = shuffle(cardClasses);\r\n    const cardContainer = document.querySelector(\".grid\");\r\n    if (cardContainer !== null) {\r\n        cardContainer.innerHTML = shuffledCard\r\n            .map((card) => {\r\n                const suit = card.split(\"-\")[1];\r\n                return `<div  class =\"card ${card}\" data-suit =\"${suit}\"></div>`;\r\n            })\r\n            .join(\"\");\r\n    }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"/src/styles/style.css\";\nimport { renderBoard } from \"./game.js\";\nconst cardClassesLv3 = [\n    \"a-spades\",\n    \"k-spades\",\n    \"q-spades\",\n    \"j-spades\",\n    \"ten-spades\",\n    \"nine-spades\",\n    \"eight-spades\",\n    \"seven-spades\",\n    \"six-spades\",\n    \"a-hearts\",\n    \"k-hearts\",\n    \"q-hearts\",\n    \"j-hearts\",\n    \"ten-hearts\",\n    \"nine-hearts\",\n    \"eight-hearts\",\n    \"seven-hearts\",\n    \"six-hearts\",\n    \"a-diamonds\",\n    \"k-diamonds\",\n    \"q-diamonds\",\n    \"j-diamonds\",\n    \"ten-diamonds\",\n    \"nine-diamonds\",\n    \"eight-diamonds\",\n    \"seven-diamonds\",\n    \"six-diamonds\",\n    \"a-clubs\",\n    \"k-clubs\",\n    \"q-clubs\",\n    \"j-clubs\",\n    \"ten-clubs\",\n    \"nine-clubs\",\n    \"eight-clubs\",\n    \"seven-clubs\",\n    \"six-clubs\",\n];\nconst cardClassesLv2 = [\n    \"a-spades\",\n    \"k-spades\",\n    \"q-spades\",\n    \"j-spades\",\n    \"ten-spades\",\n    \"nine-spades\",\n    \"eight-spades\",\n    \"seven-spades\",\n    \"six-spades\",\n    \"a-hearts\",\n    \"k-hearts\",\n    \"q-hearts\",\n    \"j-hearts\",\n    \"ten-hearts\",\n    \"nine-hearts\",\n    \"eight-hearts\",\n    \"seven-hearts\",\n    \"six-hearts\",\n    \"a-diamonds\",\n    \"k-diamonds\",\n    \"q-diamonds\",\n    \"j-diamonds\",\n    \"ten-diamonds\",\n    \"nine-diamonds\",\n    \"eight-diamonds\",\n    \"seven-diamonds\",\n    \"six-diamonds\",\n    \"a-clubs\",\n    \"k-clubs\",\n    \"q-clubs\",\n    \"j-clubs\",\n    \"ten-clubs\",\n    \"nine-clubs\",\n    \"eight-clubs\",\n    \"seven-clubs\",\n    \"six-clubs\",\n];\nconst cardClassesLv1 = [\n    \"a-spades\",\n    \"k-spades\",\n    \"q-spades\",\n    \"j-spades\",\n    \"ten-spades\",\n    \"nine-spades\",\n    \"eight-spades\",\n    \"seven-spades\",\n    \"six-spades\",\n    \"a-hearts\",\n    \"k-hearts\",\n    \"q-hearts\",\n    \"j-hearts\",\n    \"ten-hearts\",\n    \"nine-hearts\",\n    \"eight-hearts\",\n    \"seven-hearts\",\n    \"six-hearts\",\n];\n\nlet selectedLevel = null;\nlet cardClasses = [];\nlet openedCards = [];\nconst cardContainer = document.querySelector(\".grid\");\n\nfunction handleLevelSelection() {\n    const levelRadio = document.querySelectorAll(\".level\");\n\n    for (let i = 0; i < levelRadio.length; i++) {\n        if (levelRadio[i].checked) {\n            selectedLevel = parseInt(levelRadio[i].value);\n\n            break;\n        }\n    }\n}\nconst startButton = document.querySelector(\".level__start-form\");\n\nstartButton?.addEventListener(\"submit\", () => {\n    handleLevelSelection();\n\n    if (selectedLevel !== null) {\n        localStorage.setItem(\"selectedLevel\", String(selectedLevel));\n\n        window.location.assign(\"game-board.html\");\n    }\n});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    selectedLevel = localStorage.getItem(\"selectedLevel\");\n\n    if (selectedLevel == 1) {\n        cardClasses = cardClassesLv1;\n    }\n    if (selectedLevel == 2) {\n        cardClasses = cardClassesLv2;\n    }\n    if (selectedLevel == 3) {\n        cardClasses = cardClassesLv3;\n    }\n\n    renderBoard(cardClasses);\n    setTimeout(() => {\n        closeCards();\n    }, 5000);\n    cardContainer?.addEventListener(\"click\", (event) => {\n        const card = event.target;\n        if (\n            card.classList.contains(\"card\") &&\n            !card.classList.contains(\"open\")\n        ) {\n            openCard(card);\n            checkMatch();\n        }\n    });\n});\n\nconst closeCards = () => {\n    let cardsElement = document.querySelectorAll(\".card\");\n    cardsElement.forEach((card) => {\n        card.classList.add(\"close\");\n    });\n\n    openedCards = [];\n};\n\nconst openCard = (card) => {\n    card.classList.remove(\"close\");\n    openedCards.push(card);\n};\nconst checkMatch = () => {\n    if (openedCards.length === 2) {\n        const [firstCard, secondCard] = openedCards;\n        if (firstCard.dataset.suit === secondCard.dataset.suit) {\n            setTimeout(() => {\n                alert(\"Вы победили\");\n            }, 400);\n        } else {\n            setTimeout(() => {\n                alert(\"Вы проиграли\");\n            }, 400);\n        }\n    }\n};\n"],"names":[],"sourceRoot":""}